@use "sass:map" as map;
@use "sass:color" as color;
@use "../pass/index.scss" as pass;
$collectIndex: 5;
@mixin layout() {
  display: grid;
  grid-template-columns: 3em 1fr;
  width: 100%;
  & * { box-sizing: border-box; }
  & ul, li {
    margin: 0 0 0 1em; 
    padding: 0; 
  }
  &[data-pand="im"] {
    & > :nth-child(#{$collectIndex}) {
      display: none;
    }
  }
  &[data-pand="ex"] {
    display: grid;
  }
  & > pass {
    grid-row: span 2 / span 2;
  }
  & > id {
    display: flex;
    grid-column-start: 2;
    grid-row-start: 1; 
    padding: {
      top: 0.125em;
      right: 0.5em;
      bottom: 0.125em;
      left: 0.5em;
    }
  }
  & > name {
    display: flex;
    grid-column-start: 2;
    grid-row-start: 2;
    padding: {
      top: 0.125em;
      right: 0.5em;
      bottom: 0.125em;
      left: 0.5em;
    }
  }
  & > descript {
    display: flex; 
    flex-direction: column;
    grid-column: span 2 / span 2;
    grid-row-start: 3;
    padding: {
      top: 0.25em;
      right: 0.5em;
      bottom: 0.25em;
      left: 0.5em;
    }
    &:empty { display: none; }
  }
  & > :nth-child(#{$collectIndex}) {
    display: flex;
    flex-wrap: wrap;
    grid-column: span 2 / span 2;
    grid-row-start: #{calc($collectIndex - 1)};
    &:is(detail) {
      &:empty { display: none; }
      padding: {
        top: 0.25em;
        right: 0.5em;
        bottom: 0.25em;
        left: 0.5em;
      }
    }
  }
}
/*
$settings
  collectName
  passBackgroundColor
  passFontSize
  passGraphicBackgroundColor
  nopassBackgroundColor
  idFontSize
  nameFontSize
*/
@mixin style($settings) {
  $passBackgroundColor: map.get($settings, "passBackgroundColor");
  $passFontSize: map.get($settings, "passFontSize");
  $nopassBackgroundColor: map.get($settings, "nopassBackgroundColor");
  $idFontSize: map.get($settings, "idFontSize");
  $nameFontSize: map.get($settings, "nameFontSize");
  $nameCodeFontSize: map.get($settings, "nameCodeFontSize");
  $descriptFontSize: map.get($settings, "descriptFontSize");
  $descriptCodeFontSize: map.get($settings, "descriptCodeFontSize");
  $bodyCodeFontSize: map.get($settings, "bodyCodeFontSize");
  $collectName: map.get($settings, "collectName");
  &[data-pass="true"] {
    border: {
      top: {
        width: 0.1em;
        style: solid; 
        color: color.scale(
          $passBackgroundColor, 
          $lightness: 50%,
          $saturation: 25%,
        );
      };
      bottom: {
        width: 0.1em;
        style: solid; 
        color: color.scale(
          $passBackgroundColor, 
          $lightness: 25%,
          $saturation: -50%,
        );
      };
    };
    background: {
      color: $passBackgroundColor;
    }
    & > descript {
      border: {
        top: {
          width: 0.1em;
          style: solid;
          color: color.scale(
            $passBackgroundColor,
            $saturation: -30%,
            $lightness: 30%,
          );
        };
      }
      background: {
        color: color.scale(
          $passBackgroundColor,
          $lightness: 50%,
        );
      };
    }
    & > :nth-child(#{$collectIndex}) {
      border: {
        top: {
          width: 0.1em;
          style: solid;
          color: color.scale(
            $passBackgroundColor,
            $saturation: -35%,
            $lightness: 35%,
          );
        };
      }
      background: {
        color: color.scale(
          $passBackgroundColor,
          $lightness: 85%,
        );
      };
    }
  }
  &[data-pass="false"] {
    border: {
      top: {
        width: 0.1em;
        style: solid; 
        color: color.scale(
          $nopassBackgroundColor, 
          $lightness: 50%,
          $saturation: 25%,
        );
      }
      bottom: {
        width: 0.1em;
        style: solid;
        color: color.scale(
          $nopassBackgroundColor, 
          $lightness: 25%,
          $saturation: -50%,
        );
      }
    }
    background: {
      color: $nopassBackgroundColor;
    }
    & > descript {
      border: {
        top: {
          width: 0.1em;
          style: solid;
          color: color.scale(
            $nopassBackgroundColor,
            $saturation: -30%,
            $lightness: 30%,
          );
        };
      };
      background: {
        color: color.scale(
          $nopassBackgroundColor,
          $lightness: 50%,
        );
      };
    }
    & > :nth-child(#{$collectIndex}) {
      border: {
        top: {
          width: 0.1em;
          style: solid;
          color: color.scale(
            $nopassBackgroundColor,
            $saturation: -35%,
            $lightness: 35%,
          );
        };
      };
      background: {
        color: color.scale(
          $nopassBackgroundColor,
          $lightness: 85%,
        );
      };
    }
  }
  & > pass,
  & > id,
  & > name {
    cursor: pointer;
  }
  & > pass {
    $passSettings: (
      "fontSize": $passFontSize,
      "passBackgroundColor": $passBackgroundColor,
      "nopassBackgroundColor": $nopassBackgroundColor,
    );
    @include pass.default($passSettings);
  }
  & > id {
    font-size: $idFontSize;
  }
  & > name {
    font-size: $nameFontSize;
    code {
      font-size: $nameCodeFontSize;
    }
  }
  & > descript {
    font-size: $descriptFontSize;
    code {
      font-size: $descriptCodeFontSize;
    }
  }
  & > #{ $collectName } {}
  & > :nth-child(#{$collectIndex}) {
    &:is(detail) {
      code {
        font-size: $bodyCodeFontSize;
      }
    }
  }
  &:last-child {
    border: {
      bottom: none;
    }
  }
}